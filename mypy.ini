[mypy]
plugins =
    returns.contrib.mypy.returns_plugin
enable_error_code =
  truthy-bool,
  # We don't want "Are you missing an await?" errors,
  # because we can't disable them for tests only.
  # It is passed as a CLI arg in CI.
  # unused-awaitable,
  redundant-expr

# We run mypy on all python versions, but only 3.10+ supports pattern matching:
exclude = .*test_.*pattern_matching

disable_error_code = empty-body

# We cannot work without explicit `Any` types and plain generics:
# disallow_any_explicit = True
# disallow_any_generics = True

allow_redefinition = False
check_untyped_defs = True
disallow_untyped_calls = True
follow_imports = silent
ignore_errors = False
ignore_missing_imports = True
implicit_reexport = False
strict_optional = True
strict_equality = True
no_implicit_optional = True
local_partial_types = True
warn_no_return = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_return_any = True
warn_unused_configs = True
warn_unreachable = True

# TODO: update our output assertions to match a new syntax
force_uppercase_builtins = true
force_union_syntax = true

# We need this to debug `mypy` plugin:
show_traceback = True

# TODO: Enable this later, it's disabled temporarily while we don't discover why
# the explicit restriction on `typeshed.stdlib.unittest.mock`,
# which is the next section, is not working properly when running
# with `pytest`.
disallow_subclassing_any = False